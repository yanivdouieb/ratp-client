function error(e){console.error(`Ratp Error : ${e}`)}function warn(e){console.warn(`Ratp Warning : ${e}`)}async function send_(e){const r=await fetch(e),t=await r.json();return 400===r.status?(console.clear(),"Bad Request"):t.result}class Ratp{constructor(e){return this.version=`v${e}`,e?isNaN(e)?(error("API version can only be a number"),this.version=null):void fetch(`https://api-ratp.pierre-grimaud.fr/v${e}/lines`).catch(e=>{console.clear(),error("API version does not exist")}):warn("API version is not defined")}async getDestinations(e,r){return e?r?send_(`https://api-ratp.pierre-grimaud.fr/${this.version}/destinations/${e}/${r}`):error("code has not been defined"):error("type has not been defined")}async getLines(e,r){return e?e?send_(r?`https://api-ratp.pierre-grimaud.fr/${this.version}/lines/${e}/${r}`:`https://api-ratp.pierre-grimaud.fr/${this.version}/lines/${e}`):void 0:send_(`https://api-ratp.pierre-grimaud.fr/${this.version}/lines`)}async getMissions(e,r){return e?r?send_(`https://api-ratp.pierre-grimaud.fr/${this.version}/missions/rers/${e}/${r}`):error("mission has not been defined"):error("code has not been defined")}async getSchedules(e,r,t,i){return e?r?t?i?send_(`https://api-ratp.pierre-grimaud.fr/${this.version}/schedules/${e}/${r}/${t}/${i}`):error("way has not been defined"):error("station has not been defined"):error("code has not been defined"):error("type has not been defined")}async getStations(e,r,t){return e?r?send_(t?`https://api-ratp.pierre-grimaud.fr/${this.version}/stations/${e}/${r}?way=${t}`:`https://api-ratp.pierre-grimaud.fr/${this.version}/stations/${e}/${r}`):error("code has not been defined"):error("type has not been defined")}async getTraffic(e,r){return e?e?send_(r?`https://api-ratp.pierre-grimaud.fr/${this.version}/traffic/${e}/${r}`:`https://api-ratp.pierre-grimaud.fr/${this.version}/traffic/${e}`):void 0:send_(`https://api-ratp.pierre-grimaud.fr/${this.version}/traffic`)}}export default Ratp;
